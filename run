#!/bin/bash
### Script runner for multi language

if [ -z "$#" ]; then
  echo "c [OPTION] [SOURCE_FILE]"
  exit 1
elif [[ "${source_file}" =~ (-h|--help) ]]; then
  echo "c [OPTION] [SOURCE_FILE]"
  exit
fi

source_file="${!#}"
args="${@:1:$#-1}"
file_extension="$(echo "${source_file}" | sed 's/^.*\.\([^\.]*\)$/\1/')"
exec_file="/tmp/runner/a.out"
runner=""

# user_setting_location="$HOME/.config/runner/user_runner"
# if [ -e "$user_setting_location" ]; then
#   source "$user_setting_location"
# fi

if [ "$(uname)" == "Darwin" ]; then
  c_compiler="clang"
  cpp_compiler="clang++"
elif [ "$(uname)" == "Linux" ]; then
  c_compiler="gcc"
  cpp_compiler="g++"
fi

shebang="$(head -n 1 "${source_file}")"

if [[ "${shebang}" =~ \#\!/ ]]; then
  runner="${shebang//\#\!//}"
else
  case "${file_extension}" in
    "c"   ) runner="${c_compiler} -o ${exec_file}" ;;
    "cpp" ) runner="${cpp_compiler} -o ${exec_file}" ;;
    "nim" ) runner="nim c r" ;;
    "pas" ) runner="" ;;
    "php" ) runner="php" ;;
    "py"  ) runner="python3" ;;
    "rb"  ) runner="ruby" ;;
    "cl" | "lisp" ) runner="sbcl --script" ;;
    * ) echo "File is not supported"; exit
  esac
fi

if [ -n "${runner}" ] && [ -z "${exec_file}" ]; then
  # script language
  eval "${runner} ${source_file} ${args}"
elif [ -n "${exec_file}" ]; then
  # compile language
  if [ ! -d "/tmp/runner" ]; then
    mkdir -p /tmp/runner
  fi
  eval "${runner} ${source_file}" && \
    chmod +x "${exec_file}" && \
    "${exec_file} ${args}"
  # rm -r /tmp/runner
fi

